reconfiguration bla (Name x;
					Node y) {
	Pattern g;
	@ id ();
}

reconfiguration blabla(Pattern p,p1; Set<Pair<Node>> M) {
	@ par (p);
	@ id ();
	Node a;
	Name b;
	Name y = b;
	Name c;
	Node h;
	Channel cc;
	
	Node g = N(b);
	@ bla (b,h);
	forall(Pair<Node> n : M) {
		Node n1,n2; 
		Channel n3;
		n1 = n.fst; 
		n2 = n.snd; 
		
		Set<Node> E = S(n1, n2);
		@ join(E);
		
		forall (Pair<Node> nn : M)
		{	
			@ remove(b);
			p1 = @ par(p);
			Set<Pattern> U;
			forall (Pattern p3 : U) {
				Set<Node> E5 = E + S(g,n2);
				Set<Node> E65 = E + S(N(c));
				forall (Pattern p5 : U) {
					Set<Node> E6 = E + S(N(c));
					Set<Node> E7 = S(n1);
					Set<Node> E8 = S(n2);
				}
				Set<Node> E9 = S(n2);
				Set<Node> E10 = S(n1);
			}
			
			forall (Pattern p5 : U) {
				E = S(g);
				Set<Node> E13 = S(a);
				forall (Pattern p6 : U){
					Node E22 = a;
					forall (Pattern p10 : U){
						Node E25 = a;
					}
				}
				forall (Pattern p13 : U){
					Node E22 = a;
					forall (Pattern p10 : U){
						Node E25 = a;
					}
				}
				
				Set<Node> E14 = S(g);
			}
			Set<Pattern> this;
			forall (Pattern p6 : this){
				Node E22 = a;
			}
			Set<Node> E1 = S(a);
			@ join(E1);
			Set<Node> E11 = S(g);
		}
		Set<Pattern> this;
		forall (Pattern p6 : this){
			Channel ch = cc;
			forall (Pattern p12 : this){
				Channel ch2 = n3;
			}
		}
		Pattern p2 = @ split(n);
		Set<Node> E2 = S(a);
		@ join(E2);  
	}
	Set<Pattern> this;
	forall (Pattern p10 : this){
		Channel ch = cc;
		forall (Pattern p12 : this){
			Channel ch2 = cc;
		}
	}
	Channel pp1;
	Pattern pp2;
	Set<Node> d = pp2.in - pp1.in ;
	Set<Node> f = pp2.out - pp1.out ;
	Set<Node> j = pp2.out - pp1.out ;
}

